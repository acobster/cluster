#!/usr/bin/env bash

#################################################
###  DEPLOY A FLYNN CLUSTER TO DIGITAL OCEAN  ###
#################################################


usage() {
  echo
  echo 'usage:'
  echo
  echo '  deploy.sh [OPTIONS]'
  echo
  echo '  OPTIONS:'
  echo
  echo '  -h|--help show this usage text'
  echo
  echo '  -S|--skip-system-check skip checking this system for dependencies'
  echo
  echo '  -K|--skip-ssh skip checking for/importing local SSH keys'
  echo
}


POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"

case $key in
  -h|--help)
    # show usage and bail
    usage
    exit
    ;;
  -S|--skip-system-check)
    SKIP_SYSTEM_CHECK=1
    shift # past argument
    ;;
  -K|--skip-ssh-import)
    SKIP_SSH_IMPORT=1
    shift # past argument
    ;;
  -y|--arg-with-value)
    VALARG="$2"
    shift # past argument
    shift # past value
    ;;
  *)
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;
esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters



main() {

  if [[ -z "$SKIP_SYSTEM_CHECK" ]]
  then
    do_system_check
  fi

  if [[ -z "$SKIP_SSH_IMPORT" ]]
  then
    detect_and_import_ssh_keys
  fi
  exit

  # Initialize the cluster infrastructure with Terraform
  terraform init
  terraform plan -out=cluster.plan
  terraform apply cluster.plan

  ip1="$(terraform output node_1_ip)"
  ip2="$(terraform output node_2_ip)"
  ip3="$(terraform output node_3_ip)"

  for ip in "$ip1" "$ip2" "$ip3"
  do
    install_flynn "$ip"
  done

  ssh root@"$ip1" -t 'flynn-host init --init-discovery'

}


do_system_check() {
  # Unless we're skipping SSH key import, we need the DO CLI
  if [[ -z "$SKIP_SSH_IMPORT" && -z $(which doctl) ]]
  then
    echo '✗ No doctl (DigitalOcean CLI) detected!'
    exit 1
  fi

  if [[ -z $(which terraform) ]]
  then
    echo '✗ No terraform detected!'
    exit 1
  fi

  if [[ -z $(which ansible) ]]
  then
    echo '✗ No ansible detected!'
    exit 1
  fi

  echo '✓ System checks pass!'
  exit
}


detect_and_import_ssh_keys() {
  DEFAULT_PUBKEY="$HOME/.ssh/id_rsa.pub"
  if [[ -f "$DEFAULT_PUBKEY" ]]
  then
    # Read PUBKEY from stdin
    read -p "public key file: (${DEFAULT_PUBKEY}) " PUBKEY
    PUBKEY=${PUBKEY:-"$DEFAULT_PUBKEY"}
  else
    PUBKEY=$(read -p "public key file: ")
  fi

  if [[ -f "$PUBKEY" ]]
  then
    echo "importing public key ${PUBKEY}..."
    # Read ssh keyname from stdin
    doctl compute ssh-key import \
      $(read -p 'Name this SSH key: ' KEY_NAME ; echo $KEY_NAME) \
      --public-key-file "$PUBKEY"
  else
    echo "invalid public key: ${PUBKEY}; file not found"
    exit 1
  fi
}


install_flynn() {
  ssh root@"$1" -t 'bash < <(curl -fsSL https://dl.flynn.io/install-flynn)'
}



main
